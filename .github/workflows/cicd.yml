name: CI/CD Pipeline

on:
  pull_request:
    branches: [main]

env:
  PROJECT_ID: gacs-playground
  GAR_LOCATION: us-central1
  REPOSITORY: container-images
  IMAGE: github-actions
  REGION: us-central1
  WIP: projects/130218930734/locations/global/workloadIdentityPools/github-actions-pool-2/providers/github-actions-provider-3
  SA: github-actions-2@gacs-playground.iam.gserviceaccount.com

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{github.head_ref}}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.OS }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.OS }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Test
        run: npm run test

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: GCP auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          create_credentials_file: true
          workload_identity_provider: ${{ env.WIP }}
          service_account: ${{ env.SA}}

      - name: Docker auth
        id: docker-auth
        uses: docker/login-action@v3
        with:
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Build container
        run: docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}" ./

      - name: Push container
        run: docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}"

  deploy-dev:
    needs: build
    environment: dev
    runs-on: ubuntu-latest
            
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
      id-token: write

    steps:
      - name: GCP auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WIP }}
          service_account: ${{ env.SA}}

      - name: GCP Cloud Run deploy
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}
          project_id: ${{ env.PROJECT_ID }}
          service: github-actions-dev
          region: ${{ env.REGION }}
          suffix: ${{ github.sha }}
          tag: ${{ github.head_ref }}
          flags: --allow-unauthenticated

      - name: Show URL in PR comment
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'URL: ${{steps.deploy.outputs.url}}'
            })

  deploy-prod:
    needs: deploy-dev
    environment: prod
    runs-on: ubuntu-latest
            
    permissions:
      contents: read
      id-token: write

    steps:
      - name: GCP auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WIP }}
          service_account: ${{ env.SA}}

      - name: GCP Cloud Run deploy
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}
          project_id: ${{ env.PROJECT_ID }}
          service: github-actions-dev
          region: ${{ env.REGION }}
          suffix: ${{ github.sha }}
          tag: ${{ github.ref_name }}
          flags: --allow-unauthenticated
